#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TeamSelectionCreative

#include "Basic.hpp"

#include "SSelectedSkills_structs.hpp"
#include "ETeamID_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.BackWithNecessaryUpdates
// 0x0048 (0x0048 - 0x0000)
struct WB_TeamSelectionCreative_C_BackWithNecessaryUpdates final
{
public:
	class AB_CreativeWitch_C*                     WitchPawn;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue_2;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue_3;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_BackWithNecessaryUpdates");
static_assert(sizeof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates) == 0x000048, "Wrong size on WB_TeamSelectionCreative_C_BackWithNecessaryUpdates");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, WitchPawn) == 0x000000, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::WitchPawn' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000008, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_NotEqual_ClassClass_ReturnValue_1) == 0x000009, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_NotEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_NotEqual_ClassClass_ReturnValue_2) == 0x00000B, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_NotEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_NotEqual_ClassClass_ReturnValue_3) == 0x00000C, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_NotEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_BooleanOR_ReturnValue_1) == 0x00000D, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000018, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_AsB_Witch) == 0x000028, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_AsB_Hunter) == 0x000038, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_BackWithNecessaryUpdates, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'WB_TeamSelectionCreative_C_BackWithNecessaryUpdates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.Close
// 0x0038 (0x0038 - 0x0000)
struct WB_TeamSelectionCreative_C_Close final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_Close) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_Close");
static_assert(sizeof(WB_TeamSelectionCreative_C_Close) == 0x000038, "Wrong size on WB_TeamSelectionCreative_C_Close");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_TeamSelectionCreative_C_Close::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_TeamSelectionCreative_C_Close::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_TeamSelectionCreative_C_Close::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'WB_TeamSelectionCreative_C_Close::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'WB_TeamSelectionCreative_C_Close::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000028, "Member 'WB_TeamSelectionCreative_C_Close::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Close, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_TeamSelectionCreative_C_Close::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.ExecuteUbergraph_WB_TeamSelectionCreative
// 0x0098 (0x0098 - 0x0000)
struct WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSelectedSkills                       K2Node_MakeStruct_SSelectedSkills;                 // 0x0008(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryInitializeSkillDisplay_Succsses;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative");
static_assert(sizeof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative) == 0x000098, "Wrong size on WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, EntryPoint) == 0x000000, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_IsVisible_ReturnValue) == 0x000004, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_IsValidClass_ReturnValue) == 0x000005, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_MakeStruct_SSelectedSkills) == 0x000008, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_MakeStruct_SSelectedSkills' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_IsValidClass_ReturnValue_1) == 0x000028, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_GetGameInstance_ReturnValue_1) == 0x000038, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_DynamicCast_AsB_Game_Instance) == 0x000040, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000050, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen) == 0x000059, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, CallFunc_TryInitializeSkillDisplay_Succsses) == 0x00005B, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::CallFunc_TryInitializeSkillDisplay_Succsses' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_Event_MyGeometry) == 0x00005C, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative, K2Node_Event_InDeltaTime) == 0x000094, "Member 'WB_TeamSelectionCreative_C_ExecuteUbergraph_WB_TeamSelectionCreative::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.Get_GameModeText_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct WB_TeamSelectionCreative_C_Get_GameModeText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_Get_GameModeText_Text_0");
static_assert(sizeof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0) == 0x0000A0, "Wrong size on WB_TeamSelectionCreative_C_Get_GameModeText_Text_0");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, ReturnValue) == 0x000000, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, K2Node_MakeArray_Array) == 0x000080, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameModeText_Text_0, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WB_TeamSelectionCreative_C_Get_GameModeText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.Get_GameNameText_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct WB_TeamSelectionCreative_C_Get_GameNameText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_Get_GameNameText_Text_0");
static_assert(sizeof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0) == 0x0000A0, "Wrong size on WB_TeamSelectionCreative_C_Get_GameNameText_Text_0");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, ReturnValue) == 0x000000, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, K2Node_MakeArray_Array) == 0x000080, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Get_GameNameText_Text_0, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WB_TeamSelectionCreative_C_Get_GameNameText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_TeamSelectionCreative_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_GetInitialFocusWidget");
static_assert(sizeof(WB_TeamSelectionCreative_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_TeamSelectionCreative_C_GetInitialFocusWidget");
static_assert(offsetof(WB_TeamSelectionCreative_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_TeamSelectionCreative_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.SelectPlayerTeam
// 0x0005 (0x0005 - 0x0000)
struct WB_TeamSelectionCreative_C_SelectPlayerTeam final
{
public:
	ETeamID                                       SelectedTeam;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_SelectPlayerTeam) == 0x000001, "Wrong alignment on WB_TeamSelectionCreative_C_SelectPlayerTeam");
static_assert(sizeof(WB_TeamSelectionCreative_C_SelectPlayerTeam) == 0x000005, "Wrong size on WB_TeamSelectionCreative_C_SelectPlayerTeam");
static_assert(offsetof(WB_TeamSelectionCreative_C_SelectPlayerTeam, SelectedTeam) == 0x000000, "Member 'WB_TeamSelectionCreative_C_SelectPlayerTeam::SelectedTeam' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_SelectPlayerTeam, Temp_bool_Variable) == 0x000001, "Member 'WB_TeamSelectionCreative_C_SelectPlayerTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_SelectPlayerTeam, Temp_byte_Variable) == 0x000002, "Member 'WB_TeamSelectionCreative_C_SelectPlayerTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_SelectPlayerTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WB_TeamSelectionCreative_C_SelectPlayerTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_SelectPlayerTeam, K2Node_Select_Default) == 0x000004, "Member 'WB_TeamSelectionCreative_C_SelectPlayerTeam::K2Node_Select_Default' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TeamSelectionCreative_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_Tick) == 0x000004, "Wrong alignment on WB_TeamSelectionCreative_C_Tick");
static_assert(sizeof(WB_TeamSelectionCreative_C_Tick) == 0x00003C, "Wrong size on WB_TeamSelectionCreative_C_Tick");
static_assert(offsetof(WB_TeamSelectionCreative_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TeamSelectionCreative_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TeamSelectionCreative_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_TeamSelectionCreative.WB_TeamSelectionCreative_C.TryInitializeSkillDisplay
// 0x0038 (0x0038 - 0x0000)
struct WB_TeamSelectionCreative_C_TryInitializeSkillDisplay final
{
public:
	bool                                          Succsses;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AreSkillsSet;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       OwningPlayerState;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay) == 0x000008, "Wrong alignment on WB_TeamSelectionCreative_C_TryInitializeSkillDisplay");
static_assert(sizeof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay) == 0x000038, "Wrong size on WB_TeamSelectionCreative_C_TryInitializeSkillDisplay");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, Succsses) == 0x000000, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::Succsses' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, AreSkillsSet) == 0x000001, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::AreSkillsSet' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, OwningPlayerState) == 0x000008, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::OwningPlayerState' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000028, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_TeamSelectionCreative_C_TryInitializeSkillDisplay, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_TeamSelectionCreative_C_TryInitializeSkillDisplay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

