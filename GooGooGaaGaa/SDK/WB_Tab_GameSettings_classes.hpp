#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tab_GameSettings

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Tab_GameSettings.WB_Tab_GameSettings_C
// 0x0088 (0x0348 - 0x02C0)
class UWB_Tab_GameSettings_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_CheckBoxWithLabel_C*                CheckBox_Chat;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_ChatTimestamps;                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_Help;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_HunterOutlines;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_JumpScares;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_VoiceChat;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                CheckBox_WitchOutlines;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ComboBoxWithLabel_C*                ComboBox_ColoblindMode;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ComboBoxWithLabel_C*                ComboBox_Language;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_0;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SliderWithLabel_C*                  Slider_ColorblindScale;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 SelectedLanguagename;                              // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bSelectedChatEnabled;                              // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDirty;                                            // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedShowHelp;                                 // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedShowHunterOutlines;                       // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedShowWitchOutlines;                        // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedDisableJumpScares;                        // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedShowChatTimestamps;                       // 0x0336(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelectedVoiceChatEnabled;                         // 0x0337(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         SelectedColorBlindMode;                            // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3624[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SelectedColorBlindIntensity;                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CheckBox_Chat_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_ChatTimestamps_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_Help_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_HunterOutlines_K2Node_ComponentBoundEvent_2_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_JumpScares_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_VoiceChat_K2Node_ComponentBoundEvent_6_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__CheckBox_WitchOutlines_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature(class UWB_CheckBoxWithLabel_C* Sender, bool IsChecked);
	void BndEvt__ComboBox_Language_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__WB_Tab_GameSettings_ComboBox_ColoblindMode_K2Node_ComponentBoundEvent_8_OnSelectionChanged__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__WB_Tab_GameSettings_Slider_ColorblindScale_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature(double RealValue);
	void ConfirmAction();
	void Construct();
	void Destruct();
	void DiscardChanges();
	void ExecuteUbergraph_WB_Tab_GameSettings(int32 EntryPoint);
	ECheckBoxState Get_EnableChatCheckBox_CheckedState_0();
	void GetColorBlindOption(uint8 InByte, class FText* SelectedText);
	class UUserWidget* GetInitialFocusWidget();
	class UPanelWidget* GetPanelWidget();
	void Init();
	void IsDirty(bool* Param_bDirty);
	void RequestConfirmableAction();
	void RevertChanges();
	void SetSettingsVisibilityForPlatform();
	void UpdateColorBlind();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Tab_GameSettings_C">();
	}
	static class UWB_Tab_GameSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Tab_GameSettings_C>();
	}
};
static_assert(alignof(UWB_Tab_GameSettings_C) == 0x000008, "Wrong alignment on UWB_Tab_GameSettings_C");
static_assert(sizeof(UWB_Tab_GameSettings_C) == 0x000348, "Wrong size on UWB_Tab_GameSettings_C");
static_assert(offsetof(UWB_Tab_GameSettings_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Tab_GameSettings_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_Chat) == 0x0002C8, "Member 'UWB_Tab_GameSettings_C::CheckBox_Chat' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_ChatTimestamps) == 0x0002D0, "Member 'UWB_Tab_GameSettings_C::CheckBox_ChatTimestamps' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_Help) == 0x0002D8, "Member 'UWB_Tab_GameSettings_C::CheckBox_Help' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_HunterOutlines) == 0x0002E0, "Member 'UWB_Tab_GameSettings_C::CheckBox_HunterOutlines' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_JumpScares) == 0x0002E8, "Member 'UWB_Tab_GameSettings_C::CheckBox_JumpScares' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_VoiceChat) == 0x0002F0, "Member 'UWB_Tab_GameSettings_C::CheckBox_VoiceChat' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, CheckBox_WitchOutlines) == 0x0002F8, "Member 'UWB_Tab_GameSettings_C::CheckBox_WitchOutlines' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, ComboBox_ColoblindMode) == 0x000300, "Member 'UWB_Tab_GameSettings_C::ComboBox_ColoblindMode' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, ComboBox_Language) == 0x000308, "Member 'UWB_Tab_GameSettings_C::ComboBox_Language' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, ScrollBox_0) == 0x000310, "Member 'UWB_Tab_GameSettings_C::ScrollBox_0' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, Slider_ColorblindScale) == 0x000318, "Member 'UWB_Tab_GameSettings_C::Slider_ColorblindScale' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, SelectedLanguagename) == 0x000320, "Member 'UWB_Tab_GameSettings_C::SelectedLanguagename' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedChatEnabled) == 0x000330, "Member 'UWB_Tab_GameSettings_C::bSelectedChatEnabled' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bDirty) == 0x000331, "Member 'UWB_Tab_GameSettings_C::bDirty' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedShowHelp) == 0x000332, "Member 'UWB_Tab_GameSettings_C::bSelectedShowHelp' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedShowHunterOutlines) == 0x000333, "Member 'UWB_Tab_GameSettings_C::bSelectedShowHunterOutlines' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedShowWitchOutlines) == 0x000334, "Member 'UWB_Tab_GameSettings_C::bSelectedShowWitchOutlines' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedDisableJumpScares) == 0x000335, "Member 'UWB_Tab_GameSettings_C::bSelectedDisableJumpScares' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedShowChatTimestamps) == 0x000336, "Member 'UWB_Tab_GameSettings_C::bSelectedShowChatTimestamps' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, bSelectedVoiceChatEnabled) == 0x000337, "Member 'UWB_Tab_GameSettings_C::bSelectedVoiceChatEnabled' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, SelectedColorBlindMode) == 0x000338, "Member 'UWB_Tab_GameSettings_C::SelectedColorBlindMode' has a wrong offset!");
static_assert(offsetof(UWB_Tab_GameSettings_C, SelectedColorBlindIntensity) == 0x000340, "Member 'UWB_Tab_GameSettings_C::SelectedColorBlindIntensity' has a wrong offset!");

}

