#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LightColorTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_PlaceAndEditUITab_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_LightColorTab.WB_LightColorTab_C
// 0x0058 (0x0330 - 0x02D8)
class UWB_LightColorTab_C final : public UWB_PlaceAndEditUITab_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_LightColorTab_C;                 // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BorderLine;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BrightnessBox;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BrightnessIcon;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                BrightnessSlider;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ColorShowcaseBox;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GroupPreviewInfo_C*                 LightGroupPreviewInfo;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_LightColorButton_C*                 ShowcaseColorButton;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        BrightnessSliderMultiplier;                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BrightnessSliderValue;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_WorldSettingsTab_C*                 WorldsettingsTabParent;                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WB_LightColorTab_ValueSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void ExecuteUbergraph_WB_LightColorTab(int32 EntryPoint);
	void Initialize();
	void UpdateBrightnessSlider();
	void UpdateContent();
	void UpdateGroupPreviewContentAndVisibility();
	void UpdateShowcaseColorButton();
	void UpdatetBrightnessOnSliderChange(double BrightnessValue);

	void GetColorConsideringBrightness(const struct FVector& InputColor, struct FVector* NewColor) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_LightColorTab_C">();
	}
	static class UWB_LightColorTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_LightColorTab_C>();
	}
};
static_assert(alignof(UWB_LightColorTab_C) == 0x000008, "Wrong alignment on UWB_LightColorTab_C");
static_assert(sizeof(UWB_LightColorTab_C) == 0x000330, "Wrong size on UWB_LightColorTab_C");
static_assert(offsetof(UWB_LightColorTab_C, UberGraphFrame_WB_LightColorTab_C) == 0x0002D8, "Member 'UWB_LightColorTab_C::UberGraphFrame_WB_LightColorTab_C' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BorderLine) == 0x0002E0, "Member 'UWB_LightColorTab_C::BorderLine' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BrightnessBox) == 0x0002E8, "Member 'UWB_LightColorTab_C::BrightnessBox' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BrightnessIcon) == 0x0002F0, "Member 'UWB_LightColorTab_C::BrightnessIcon' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BrightnessSlider) == 0x0002F8, "Member 'UWB_LightColorTab_C::BrightnessSlider' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, ColorShowcaseBox) == 0x000300, "Member 'UWB_LightColorTab_C::ColorShowcaseBox' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, LightGroupPreviewInfo) == 0x000308, "Member 'UWB_LightColorTab_C::LightGroupPreviewInfo' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, ShowcaseColorButton) == 0x000310, "Member 'UWB_LightColorTab_C::ShowcaseColorButton' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BrightnessSliderMultiplier) == 0x000318, "Member 'UWB_LightColorTab_C::BrightnessSliderMultiplier' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, BrightnessSliderValue) == 0x000320, "Member 'UWB_LightColorTab_C::BrightnessSliderValue' has a wrong offset!");
static_assert(offsetof(UWB_LightColorTab_C, WorldsettingsTabParent) == 0x000328, "Member 'UWB_LightColorTab_C::WorldsettingsTabParent' has a wrong offset!");

}

