#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PoceduralBorderMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GeometryScriptingCore_structs.hpp"
#include "SplineSegmentStruct_structs.hpp"


namespace SDK::Params
{

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct B_PoceduralBorderMesh_C_UserConstructionScript final
{
public:
	class UDynamicMesh*                           CallFunc_GetDynamicMesh_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Reset_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_UserConstructionScript");
static_assert(sizeof(B_PoceduralBorderMesh_C_UserConstructionScript) == 0x000010, "Wrong size on B_PoceduralBorderMesh_C_UserConstructionScript");
static_assert(offsetof(B_PoceduralBorderMesh_C_UserConstructionScript, CallFunc_GetDynamicMesh_ReturnValue) == 0x000000, "Member 'B_PoceduralBorderMesh_C_UserConstructionScript::CallFunc_GetDynamicMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UserConstructionScript, CallFunc_Reset_ReturnValue) == 0x000008, "Member 'B_PoceduralBorderMesh_C_UserConstructionScript::CallFunc_Reset_ReturnValue' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.UpdateDrawdistance
// 0x0068 (0x0068 - 0x0000)
struct B_PoceduralBorderMesh_C_UpdateDrawdistance final
{
public:
	class UDynamicMeshComponent*                  Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCullDistance_NewCullDistance_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_UpdateDrawdistance) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_UpdateDrawdistance");
static_assert(sizeof(B_PoceduralBorderMesh_C_UpdateDrawdistance) == 0x000068, "Wrong size on B_PoceduralBorderMesh_C_UpdateDrawdistance");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, Component) == 0x000000, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::Component' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_GetComponentBounds_Origin) == 0x000008, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_UpdateDrawdistance, CallFunc_SetCullDistance_NewCullDistance_ImplicitCast) == 0x000060, "Member 'B_PoceduralBorderMesh_C_UpdateDrawdistance::CallFunc_SetCullDistance_NewCullDistance_ImplicitCast' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.TransformMesh
// 0x00E0 (0x00E0 - 0x0000)
struct B_PoceduralBorderMesh_C_TransformMesh final
{
public:
	class UDynamicMesh*                           Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SegmentCounter;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_Reset_ReturnValue;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F20[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F21[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_TransformMesh_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_TranslateMeshUVs_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_TransformMesh) == 0x000010, "Wrong alignment on B_PoceduralBorderMesh_C_TransformMesh");
static_assert(sizeof(B_PoceduralBorderMesh_C_TransformMesh) == 0x0000E0, "Wrong size on B_PoceduralBorderMesh_C_TransformMesh");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, Mesh) == 0x000000, "Member 'B_PoceduralBorderMesh_C_TransformMesh::Mesh' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, SegmentCounter) == 0x000008, "Member 'B_PoceduralBorderMesh_C_TransformMesh::SegmentCounter' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Reset_ReturnValue) == 0x000010, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Reset_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_MakeVector2D_ReturnValue) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_TransformMesh_ReturnValue) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_TransformMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_TransformMesh, CallFunc_TranslateMeshUVs_ReturnValue) == 0x0000D8, "Member 'B_PoceduralBorderMesh_C_TransformMesh::CallFunc_TranslateMeshUVs_ReturnValue' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.SetupCollisionParameters
// 0x0008 (0x0008 - 0x0000)
struct B_PoceduralBorderMesh_C_SetupCollisionParameters final
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_SetupCollisionParameters) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_SetupCollisionParameters");
static_assert(sizeof(B_PoceduralBorderMesh_C_SetupCollisionParameters) == 0x000008, "Wrong size on B_PoceduralBorderMesh_C_SetupCollisionParameters");
static_assert(offsetof(B_PoceduralBorderMesh_C_SetupCollisionParameters, BoxCollision) == 0x000000, "Member 'B_PoceduralBorderMesh_C_SetupCollisionParameters::BoxCollision' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.GetCollisionCoverExtents
// 0x00F8 (0x00F8 - 0x0000)
struct B_PoceduralBorderMesh_C_GetCollisionCoverExtents final
{
public:
	double                                        BoxExtentX;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BoxExtentY;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CenterPointX;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CenterPointY;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxY;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxX;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinY;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinX;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F22[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F23[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F24[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F25[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_GetCollisionCoverExtents");
static_assert(sizeof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents) == 0x0000F8, "Wrong size on B_PoceduralBorderMesh_C_GetCollisionCoverExtents");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, BoxExtentX) == 0x000000, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::BoxExtentX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, BoxExtentY) == 0x000008, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::BoxExtentY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CenterPointX) == 0x000010, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CenterPointX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CenterPointY) == 0x000018, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CenterPointY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, MaxY) == 0x000020, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::MaxY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, MaxX) == 0x000028, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::MaxX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, MinY) == 0x000030, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::MinY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, MinX) == 0x000038, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::MinX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_BreakVector2D_X) == 0x000060, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, Temp_int_Variable) == 0x000070, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_BreakVector2D_X_1) == 0x000088, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_BreakVector2D_Y_1) == 0x000090, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Abs_ReturnValue) == 0x0000C8, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Abs_ReturnValue_1) == 0x0000E0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000E8, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000F2, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GetCollisionCoverExtents, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000F3, "Member 'B_PoceduralBorderMesh_C_GetCollisionCoverExtents::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.Get Segment Points
// 0x01E0 (0x01E0 - 0x0000)
struct B_PoceduralBorderMesh_C_Get_Segment_Points final
{
public:
	int32                                         NextNew;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F26[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   SegmentData;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 SplitIndexes;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 ControlPointIndexes;                               // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 SegmentIDs;                                        // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F27[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   K2Node_MakeStruct_SplineSegmentStruct;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F28[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   CallFunc_FindSegment_Segment;                      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSegment_NextNew;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F29[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2A[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2B[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2C[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2D[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           CallFunc_GetSplinePointAt_ReturnValue;             // 0x0118(0x0088)(NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2E[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2F[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_Get_Segment_Points) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_Get_Segment_Points");
static_assert(sizeof(B_PoceduralBorderMesh_C_Get_Segment_Points) == 0x0001E0, "Wrong size on B_PoceduralBorderMesh_C_Get_Segment_Points");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, NextNew) == 0x000000, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::NextNew' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, SegmentData) == 0x000008, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::SegmentData' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, SplitIndexes) == 0x000018, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::SplitIndexes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, ControlPointIndexes) == 0x000028, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::ControlPointIndexes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, SegmentIDs) == 0x000038, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::SegmentIDs' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Array_Index_Variable) == 0x000050, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Loop_Counter_Variable_2) == 0x00005C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Loop_Counter_Variable_3) == 0x000060, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Add_IntInt_ReturnValue_3) == 0x000068, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Variable) == 0x000074, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, Temp_int_Array_Index_Variable_3) == 0x00007C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, K2Node_MakeStruct_SplineSegmentStruct) == 0x000088, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::K2Node_MakeStruct_SplineSegmentStruct' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Add_ReturnValue_2) == 0x00009C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Contains_ReturnValue) == 0x0000A0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_FindSegment_Segment) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_FindSegment_Segment' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_FindSegment_NextNew) == 0x0000B8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_FindSegment_NextNew' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Add_ReturnValue_3) == 0x0000BC, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D4, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Add_ReturnValue_4) == 0x0000D8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Length_ReturnValue_2) == 0x000100, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_AddUnique_ReturnValue) == 0x000104, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Less_IntInt_ReturnValue_3) == 0x000108, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Array_Length_ReturnValue_3) == 0x00010C, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Less_IntInt_ReturnValue_4) == 0x000110, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_GetSplinePointAt_ReturnValue) == 0x000118, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_GetSplinePointAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0001A0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_BreakVector_X) == 0x0001A8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_BreakVector_Y) == 0x0001B0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_BreakVector_Z) == 0x0001B8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_MakeVector2D_ReturnValue) == 0x0001C8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D8, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_Get_Segment_Points, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x0001D9, "Member 'B_PoceduralBorderMesh_C_Get_Segment_Points::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.GenerateSplinePoints
// 0x0168 (0x0168 - 0x0000)
struct B_PoceduralBorderMesh_C_GenerateSplinePoints final
{
public:
	struct FVector2D                              CurrentVector;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubSteps;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F30[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentSegmentLength;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSegmentLength;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewPoint;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F31[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F32[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F33[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F34[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F35[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F36[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F37[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_ConvertSplineToPolyLine_OutPoints;        // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_ConvertSplineToPolyLine_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F38[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F39[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3A[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ConvertSplineToPolyLine_MaxSquareDistanceFromSpline_ImplicitCast; // 0x0164(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_GenerateSplinePoints) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_GenerateSplinePoints");
static_assert(sizeof(B_PoceduralBorderMesh_C_GenerateSplinePoints) == 0x000168, "Wrong size on B_PoceduralBorderMesh_C_GenerateSplinePoints");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CurrentVector) == 0x000000, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CurrentVector' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, SubSteps) == 0x000010, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::SubSteps' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CurrentSegmentLength) == 0x000018, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CurrentSegmentLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, MaxSegmentLength) == 0x000020, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::MaxSegmentLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, NewPoint) == 0x000028, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::NewPoint' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, Temp_int_Variable) == 0x000038, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, Temp_int_Array_Index_Variable) == 0x000048, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Get_Item) == 0x000058, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000078, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Round_ReturnValue) == 0x0000BC, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Add_ReturnValue_1) == 0x0000C4, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000C8, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Add_ReturnValue_2) == 0x0000E0, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000E8, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_ConvertSplineToPolyLine_OutPoints) == 0x0000F8, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_ConvertSplineToPolyLine_OutPoints' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_ConvertSplineToPolyLine_ReturnValue) == 0x000108, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_ConvertSplineToPolyLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_VSize2D_ReturnValue) == 0x000110, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Get_Item_2) == 0x000118, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_BreakVector_X) == 0x000130, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_BreakVector_Y) == 0x000138, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_BreakVector_Z) == 0x000140, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateSplinePoints, CallFunc_ConvertSplineToPolyLine_MaxSquareDistanceFromSpline_ImplicitCast) == 0x000164, "Member 'B_PoceduralBorderMesh_C_GenerateSplinePoints::CallFunc_ConvertSplineToPolyLine_MaxSquareDistanceFromSpline_ImplicitCast' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.GenerateMesh
// 0x0260 (0x0260 - 0x0000)
struct B_PoceduralBorderMesh_C_GenerateMesh final
{
public:
	class UDynamicMesh*                           TargetMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         InnerCounter;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SegmentCounter;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CurrentMesh;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UDynamicMesh*>                   Meshes;                                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          RandomColors;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3C[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3D[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue_1;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue_2;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptPrimitiveOptions        K2Node_MakeStruct_GeometryScriptPrimitiveOptions;  // 0x00E8(0x0003)(NoDestructor)
	uint8                                         Pad_5F3E[0x5];                                     // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMeshComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_SetMeshConstantVertexColor_ReturnValue;   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_AppendMesh_ReturnValue;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3F[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F40[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F41[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F42[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Array_Get_Item_3;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F43[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F44[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_AppendSimpleExtrudePolygon_ReturnValue;   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_SetNumUVSets_ReturnValue;                 // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_CopyUVSet_ReturnValue;                    // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ScaleMeshUVs_ReturnValue;                 // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UDynamicMesh*>                   CallFunc_SplitMeshByPolygroups_ComponentMeshes;    // 0x0218(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_SplitMeshByPolygroups_ComponentPolygroups; // 0x0228(0x0010)(ReferenceParm)
	class UDynamicMesh*                           CallFunc_SplitMeshByPolygroups_ReturnValue;        // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ResetToCube_ReturnValue;                  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Reset_ReturnValue;                        // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AppendSimpleExtrudePolygon_Height_ImplicitCast; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_GenerateMesh) == 0x000010, "Wrong alignment on B_PoceduralBorderMesh_C_GenerateMesh");
static_assert(sizeof(B_PoceduralBorderMesh_C_GenerateMesh) == 0x000260, "Wrong size on B_PoceduralBorderMesh_C_GenerateMesh");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, TargetMesh) == 0x000000, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::TargetMesh' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, RandomStream) == 0x000008, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::RandomStream' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, InnerCounter) == 0x000010, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::InnerCounter' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, SegmentCounter) == 0x000014, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::SegmentCounter' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CurrentMesh) == 0x000018, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CurrentMesh' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Meshes) == 0x000020, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Meshes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, RandomColors) == 0x000030, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::RandomColors' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_object_Variable) == 0x000038, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Variable) == 0x000040, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_bool_Variable) == 0x000044, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Array_Index_Variable) == 0x000054, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Variable_1) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_RandomFloatFromStream_ReturnValue) == 0x0000C4, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_RandomFloatFromStream_ReturnValue_1) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_RandomFloatFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_RandomFloatFromStream_ReturnValue_2) == 0x0000D4, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_RandomFloatFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_MakeColor_ReturnValue) == 0x0000D8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, K2Node_MakeStruct_GeometryScriptPrimitiveOptions) == 0x0000E8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::K2Node_MakeStruct_GeometryScriptPrimitiveOptions' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_struct_Variable) == 0x0000F0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_AddComponent_ReturnValue) == 0x000150, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_2) == 0x000158, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_3) == 0x00015C, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_4) == 0x000160, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_5) == 0x000164, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_SetMeshConstantVertexColor_ReturnValue) == 0x000168, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_SetMeshConstantVertexColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Get_Item) == 0x000170, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_AppendMesh_ReturnValue) == 0x000180, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_AppendMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000198, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Round_ReturnValue) == 0x00019C, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001A8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_MakeVector2D_ReturnValue) == 0x0001B0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Array_Index_Variable_1) == 0x0001CC, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Array_Get_Item_3) == 0x0001D0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_GetMaterial_ReturnValue) == 0x0001E0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, K2Node_Select_Default) == 0x0001E8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F0, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001F4, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_AppendSimpleExtrudePolygon_ReturnValue) == 0x0001F8, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_AppendSimpleExtrudePolygon_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_SetNumUVSets_ReturnValue) == 0x000200, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_SetNumUVSets_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_CopyUVSet_ReturnValue) == 0x000208, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_CopyUVSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_ScaleMeshUVs_ReturnValue) == 0x000210, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_ScaleMeshUVs_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_SplitMeshByPolygroups_ComponentMeshes) == 0x000218, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_SplitMeshByPolygroups_ComponentMeshes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_SplitMeshByPolygroups_ComponentPolygroups) == 0x000228, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_SplitMeshByPolygroups_ComponentPolygroups' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_SplitMeshByPolygroups_ReturnValue) == 0x000238, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_SplitMeshByPolygroups_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_ResetToCube_ReturnValue) == 0x000240, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_ResetToCube_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_Reset_ReturnValue) == 0x000248, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_Reset_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_GenerateMesh, CallFunc_AppendSimpleExtrudePolygon_Height_ImplicitCast) == 0x000250, "Member 'B_PoceduralBorderMesh_C_GenerateMesh::CallFunc_AppendSimpleExtrudePolygon_Height_ImplicitCast' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.FindSegment
// 0x0068 (0x0068 - 0x0000)
struct B_PoceduralBorderMesh_C_FindSegment final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F45[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ControlPointIndex;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSplineSegmentStruct                   Segment;                                           // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextNew;                                           // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F46[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineSegmentStruct                   CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F47[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_FindSegment) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_FindSegment");
static_assert(sizeof(B_PoceduralBorderMesh_C_FindSegment) == 0x000068, "Wrong size on B_PoceduralBorderMesh_C_FindSegment");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, Param_Index) == 0x000000, "Member 'B_PoceduralBorderMesh_C_FindSegment::Param_Index' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, ControlPointIndex) == 0x000008, "Member 'B_PoceduralBorderMesh_C_FindSegment::ControlPointIndex' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, Segment) == 0x000018, "Member 'B_PoceduralBorderMesh_C_FindSegment::Segment' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, NextNew) == 0x000028, "Member 'B_PoceduralBorderMesh_C_FindSegment::NextNew' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'B_PoceduralBorderMesh_C_FindSegment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'B_PoceduralBorderMesh_C_FindSegment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_Array_Get_Item_2) == 0x00005C, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_FindSegment, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'B_PoceduralBorderMesh_C_FindSegment::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.ExtendCollisionEdges
// 0x0338 (0x0338 - 0x0000)
struct B_PoceduralBorderMesh_C_ExtendCollisionEdges final
{
public:
	TArray<class UBoxComponent*>                  Boxes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	double                                        ExtensionAngleMultiplier;                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastExtensionLength;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextExtensionLength;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F48[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CurrentBox;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         BoxCount;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F49[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4A[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4B[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4C[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4D[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4E[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item_1;                         // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item_2;                         // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4F[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F50[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast_1;                    // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_ExtendCollisionEdges) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_ExtendCollisionEdges");
static_assert(sizeof(B_PoceduralBorderMesh_C_ExtendCollisionEdges) == 0x000338, "Wrong size on B_PoceduralBorderMesh_C_ExtendCollisionEdges");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, Boxes) == 0x000000, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::Boxes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, ExtensionAngleMultiplier) == 0x000010, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::ExtensionAngleMultiplier' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, LastExtensionLength) == 0x000018, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::LastExtensionLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, NextExtensionLength) == 0x000020, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::NextExtensionLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CurrentIndex) == 0x000028, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CurrentIndex' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CurrentBox) == 0x000030, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CurrentBox' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, BoxCount) == 0x000038, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::BoxCount' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, Temp_int_Array_Index_Variable) == 0x000044, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_SelectInt_ReturnValue) == 0x00004C, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000060, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_GetForwardVector_ReturnValue) == 0x000090, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000E0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakVector_X) == 0x0001D0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakVector_Y) == 0x0001D8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakVector_Z) == 0x0001E0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_MakeVector_ReturnValue) == 0x0001F8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Add_IntInt_ReturnValue_2) == 0x000210, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000218, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_SelectInt_ReturnValue_1) == 0x000230, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_SelectInt_ReturnValue_2) == 0x000234, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Array_Get_Item) == 0x000238, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000240, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000248, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000260, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x000278, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Roll) == 0x000290, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Pitch) == 0x000294, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Yaw) == 0x000298, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_FMax_ReturnValue) == 0x0002A0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002A8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_SelectInt_ReturnValue_3) == 0x0002B4, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Array_Get_Item_1) == 0x0002B8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Array_Get_Item_2) == 0x0002C0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x0002C8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Array_Length_ReturnValue_1) == 0x0002E0, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0002E8, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Less_IntInt_ReturnValue_1) == 0x000300, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Roll_1) == 0x000304, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Pitch_1) == 0x000308, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_BreakRotator_Yaw_1) == 0x00030C, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_FMax_ReturnValue_1) == 0x000310, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000318, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000320, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_FMax_A_ImplicitCast) == 0x000328, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExtendCollisionEdges, CallFunc_FMax_A_ImplicitCast_1) == 0x000330, "Member 'B_PoceduralBorderMesh_C_ExtendCollisionEdges::CallFunc_FMax_A_ImplicitCast_1' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.ExecuteUbergraph_B_PoceduralBorderMesh
// 0x0058 (0x0058 - 0x0000)
struct B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F51[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDynamicMeshComponent*>          CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F52[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F53[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMeshComponent*                  K2Node_DynamicCast_AsDynamic_Mesh_Component;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F54[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Drawdistance_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh");
static_assert(sizeof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh) == 0x000058, "Wrong size on B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, EntryPoint) == 0x000000, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000004, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, K2Node_DynamicCast_AsDynamic_Mesh_Component) == 0x000040, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::K2Node_DynamicCast_AsDynamic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh, K2Node_VariableSet_Drawdistance_ImplicitCast) == 0x000050, "Member 'B_PoceduralBorderMesh_C_ExecuteUbergraph_B_PoceduralBorderMesh::K2Node_VariableSet_Drawdistance_ImplicitCast' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.CreateCollision
// 0x03B0 (0x03B0 - 0x0000)
struct B_PoceduralBorderMesh_C_CreateCollision final
{
public:
	double                                        WallHalfThickness;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WallHalfHeight;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  CollisionBoxes;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector2D                              CurrentVector;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineSegmentStruct                   CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCollisionCoverExtents_BoxExtentX;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCollisionCoverExtents_BoxExtentY;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCollisionCoverExtents_CenterPointX;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCollisionCoverExtents_CenterPointY;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue_1;      // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F55[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F56[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F57[0xF];                                     // 0x0331(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0340(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue_1;               // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_CreateCollision) == 0x000010, "Wrong alignment on B_PoceduralBorderMesh_C_CreateCollision");
static_assert(sizeof(B_PoceduralBorderMesh_C_CreateCollision) == 0x0003B0, "Wrong size on B_PoceduralBorderMesh_C_CreateCollision");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, WallHalfThickness) == 0x000000, "Member 'B_PoceduralBorderMesh_C_CreateCollision::WallHalfThickness' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, WallHalfHeight) == 0x000008, "Member 'B_PoceduralBorderMesh_C_CreateCollision::WallHalfHeight' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CollisionBoxes) == 0x000010, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CollisionBoxes' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CurrentVector) == 0x000020, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CurrentVector' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_PoceduralBorderMesh_C_CreateCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_PoceduralBorderMesh_C_CreateCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000080, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_GetCollisionCoverExtents_BoxExtentX) == 0x000090, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_GetCollisionCoverExtents_BoxExtentX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_GetCollisionCoverExtents_BoxExtentY) == 0x000098, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_GetCollisionCoverExtents_BoxExtentY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_GetCollisionCoverExtents_CenterPointX) == 0x0000A0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_GetCollisionCoverExtents_CenterPointX' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_GetCollisionCoverExtents_CenterPointY) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_GetCollisionCoverExtents_CenterPointY' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_AddComponent_ReturnValue) == 0x000138, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector_ReturnValue_2) == 0x000140, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Conv_DoubleToVector2D_ReturnValue_1) == 0x000158, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Conv_DoubleToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000168, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x00017C, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0001D0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001E0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_BreakVector2D_X) == 0x0001F0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_BreakVector2D_Y) == 0x0001F8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_BreakVector2D_X_1) == 0x000200, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_BreakVector2D_Y_1) == 0x000208, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000210, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector_ReturnValue_3) == 0x000218, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector2D_ReturnValue) == 0x000230, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_VectorVector_ReturnValue) == 0x000240, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Normal2D_ReturnValue) == 0x000258, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000268, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000280, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeRotFromX_ReturnValue) == 0x000290, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x0002A8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_VSize2D_ReturnValue) == 0x0002C0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002C8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeVector_ReturnValue_4) == 0x0002E0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002F8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Length_ReturnValue_1) == 0x000310, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000318, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Less_IntInt_ReturnValue_1) == 0x000330, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_MakeTransform_ReturnValue_1) == 0x000340, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_AddComponent_ReturnValue_1) == 0x0003A0, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CreateCollision, CallFunc_Array_Add_ReturnValue) == 0x0003A8, "Member 'B_PoceduralBorderMesh_C_CreateCollision::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_PoceduralBorderMesh.B_PoceduralBorderMesh_C.CalculateLength
// 0x00C0 (0x00C0 - 0x0000)
struct B_PoceduralBorderMesh_C_CalculateLength final
{
public:
	double                                        OverallLength;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Elements;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F58[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentLength;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F59[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5B[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5C[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5D[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F5E[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PoceduralBorderMesh_C_CalculateLength) == 0x000008, "Wrong alignment on B_PoceduralBorderMesh_C_CalculateLength");
static_assert(sizeof(B_PoceduralBorderMesh_C_CalculateLength) == 0x0000C0, "Wrong size on B_PoceduralBorderMesh_C_CalculateLength");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, OverallLength) == 0x000000, "Member 'B_PoceduralBorderMesh_C_CalculateLength::OverallLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, Elements) == 0x000008, "Member 'B_PoceduralBorderMesh_C_CalculateLength::Elements' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CurrentLength) == 0x000010, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CurrentLength' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_PoceduralBorderMesh_C_CalculateLength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_PoceduralBorderMesh_C_CalculateLength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, Temp_int_Variable) == 0x000028, "Member 'B_PoceduralBorderMesh_C_CalculateLength::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, Temp_int_Variable_1) == 0x000030, "Member 'B_PoceduralBorderMesh_C_CalculateLength::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Add_ReturnValue_1) == 0x000044, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Get_Item) == 0x000058, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_VSize2D_ReturnValue) == 0x0000A0, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PoceduralBorderMesh_C_CalculateLength, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'B_PoceduralBorderMesh_C_CalculateLength::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

