#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CookingRecipeSign

#include "Basic.hpp"

#include "B_CookingRecipeSign_classes.hpp"
#include "B_CookingRecipeSign_parameters.hpp"


namespace SDK
{

// Function B_CookingRecipeSign.B_CookingRecipeSign_C.PickMesh
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMesh*                      Static_Mesh                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CookingRecipeSign_C::PickMesh(class UStaticMesh** Static_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CookingRecipeSign_C", "PickMesh");

	Params::B_CookingRecipeSign_C_PickMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Static_Mesh != nullptr)
		*Static_Mesh = Parms.Static_Mesh;
}


// Function B_CookingRecipeSign.B_CookingRecipeSign_C.UpdateIngredientMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Param_Ingredient                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CookingRecipeSign_C::UpdateIngredientMesh(class UStaticMesh* Param_Ingredient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CookingRecipeSign_C", "UpdateIngredientMesh");

	Params::B_CookingRecipeSign_C_UpdateIngredientMesh Parms{};

	Parms.Param_Ingredient = Param_Ingredient;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CookingRecipeSign.B_CookingRecipeSign_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_CookingRecipeSign_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CookingRecipeSign_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

