#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_NewMasterServerManager

#include "Basic.hpp"

#include "B_NewMasterServerManager_classes.hpp"
#include "B_NewMasterServerManager_parameters.hpp"


namespace SDK
{

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.DidReceiveAccessToken__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::DidReceiveAccessToken__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "DidReceiveAccessToken__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.AddDefaultParameters
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FString>      Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_NewMasterServerManager_C::AddDefaultParameters(TMap<class FString, class FString>& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "AddDefaultParameters");

	Params::B_NewMasterServerManager_C_AddDefaultParameters Parms{};

	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	Parameters = std::move(Parms.Parameters);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BPTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BPTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BPTick");

	Params::B_NewMasterServerManager_C_BPTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Build User Event Post Multiple Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           JsonContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::Build_User_Event_Post_Multiple_Data(const class FString& JsonContent, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "Build User Event Post Multiple Data");

	Params::B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data Parms{};

	Parms.JsonContent = std::move(JsonContent);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Build User Event Post Single Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           JsonContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::Build_User_Event_Post_Single_Data(const class FString& JsonContent, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "Build User Event Post Single Data");

	Params::B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data Parms{};

	Parms.JsonContent = std::move(JsonContent);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetAccessTokenRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Token                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildGetAccessTokenRequest(const class FString& Token, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildGetAccessTokenRequest");

	Params::B_NewMasterServerManager_C_BuildGetAccessTokenRequest Parms{};

	Parms.Token = std::move(Token);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetGSStatsCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildGetGSStatsCallUrl(const class FString& ProductUserId, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildGetGSStatsCallUrl");

	Params::B_NewMasterServerManager_C_BuildGetGSStatsCallUrl Parms{};

	Parms.ProductUserId = std::move(ProductUserId);

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetStatsCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildGetStatsCallUrl(class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildGetStatsCallUrl");

	Params::B_NewMasterServerManager_C_BuildGetStatsCallUrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetSystemMessagesRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildGetSystemMessagesRequest(class UVaRestRequestJSON** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildGetSystemMessagesRequest");

	Params::B_NewMasterServerManager_C_BuildGetSystemMessagesRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildLoginRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AdditionalAuthInformation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildLoginRequest(const class FString& UserName, const class FString& Password, const class FString& Locale, const class FString& AccountType, const class FString& AdditionalAuthInformation, const class FString& ProductUserId, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildLoginRequest");

	Params::B_NewMasterServerManager_C_BuildLoginRequest Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);
	Parms.Locale = std::move(Locale);
	Parms.AccountType = std::move(AccountType);
	Parms.AdditionalAuthInformation = std::move(AdditionalAuthInformation);
	Parms.ProductUserId = std::move(ProductUserId);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildLoginRequestWithRefreshToken
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_RefreshToken                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AdditionalAuthInformation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildLoginRequestWithRefreshToken(const class FString& Param_RefreshToken, const class FString& Locale, const class FString& AccountType, const class FString& AdditionalAuthInformation, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildLoginRequestWithRefreshToken");

	Params::B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken Parms{};

	Parms.Param_RefreshToken = std::move(Param_RefreshToken);
	Parms.Locale = std::move(Locale);
	Parms.AccountType = std::move(AccountType);
	Parms.AdditionalAuthInformation = std::move(AdditionalAuthInformation);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildParameterString
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FString>      Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           Out                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildParameterString(const TMap<class FString, class FString>& Parameters, class FString* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildParameterString");

	Params::B_NewMasterServerManager_C_BuildParameterString Parms{};

	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildPostQuestProgressRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           JsonContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               RestRequest                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildPostQuestProgressRequest(const class FString& JsonContent, class UVaRestRequestJSON** RestRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildPostQuestProgressRequest");

	Params::B_NewMasterServerManager_C_BuildPostQuestProgressRequest Parms{};

	Parms.JsonContent = std::move(JsonContent);

	UObject::ProcessEvent(Func, &Parms);

	if (RestRequest != nullptr)
		*RestRequest = Parms.RestRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildQuestCallUrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FunctionName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class FString, class FString>      Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildQuestCallUrl(const class FString& FunctionName, const TMap<class FString, class FString>& Parameters, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildQuestCallUrl");

	Params::B_NewMasterServerManager_C_BuildQuestCallUrl Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildResetGSStatsCallRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AchievementsToo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               ResultRequest                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildResetGSStatsCallRequest(const class FString& ProductUserId, bool AchievementsToo, class UVaRestRequestJSON** ResultRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildResetGSStatsCallRequest");

	Params::B_NewMasterServerManager_C_BuildResetGSStatsCallRequest Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.AchievementsToo = AchievementsToo;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultRequest != nullptr)
		*ResultRequest = Parms.ResultRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildRestCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Section                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Function                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TMap<class FString, class FString>      Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildRestCallUrl(const class FString& Section, const class FString& Function, const TMap<class FString, class FString>& Parameters, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildRestCallUrl");

	Params::B_NewMasterServerManager_C_BuildRestCallUrl Parms{};

	Parms.Section = std::move(Section);
	Parms.Function = std::move(Function);
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildSetGSStatCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildSetGSStatCallUrl(const class FString& ProductUserId, const class FString& StatName, int32 Value, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildSetGSStatCallUrl");

	Params::B_NewMasterServerManager_C_BuildSetGSStatCallUrl Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.StatName = std::move(StatName);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildSetStatCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildSetStatCallUrl(const class FString& StatName, int32 Value, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildSetStatCallUrl");

	Params::B_NewMasterServerManager_C_BuildSetStatCallUrl Parms{};

	Parms.StatName = std::move(StatName);
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildStoreGSStatsCallRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           JsonContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               ResultRequest                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildStoreGSStatsCallRequest(const class FString& JsonContent, class UVaRestRequestJSON** ResultRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildStoreGSStatsCallRequest");

	Params::B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest Parms{};

	Parms.JsonContent = std::move(JsonContent);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultRequest != nullptr)
		*ResultRequest = Parms.ResultRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildStoreStatsCallRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           JsonContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UVaRestRequestJSON*               ResultRequest                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildStoreStatsCallRequest(const class FString& JsonContent, class UVaRestRequestJSON** ResultRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildStoreStatsCallRequest");

	Params::B_NewMasterServerManager_C_BuildStoreStatsCallRequest Parms{};

	Parms.JsonContent = std::move(JsonContent);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultRequest != nullptr)
		*ResultRequest = Parms.ResultRequest;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildUserIdCallUrl
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NativePlatformId                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           URL                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::BuildUserIdCallUrl(const class FString& ProductUserId, const class FString& AccountType, const class FString& NativePlatformId, class FString* URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "BuildUserIdCallUrl");

	Params::B_NewMasterServerManager_C_BuildUserIdCallUrl Parms{};

	Parms.ProductUserId = std::move(ProductUserId);
	Parms.AccountType = std::move(AccountType);
	Parms.NativePlatformId = std::move(NativePlatformId);

	UObject::ProcessEvent(Func, &Parms);

	if (URL != nullptr)
		*URL = std::move(Parms.URL);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CacheLoginData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CachedUsername                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CachedPassword                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CachedLocale                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CachedAccountType                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::CacheLoginData(const class FString& UserName, const class FString& Password, const class FString& Locale, const class FString& AccountType, class FString* CachedUsername, class FString* CachedPassword, class FString* CachedLocale, class FString* CachedAccountType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "CacheLoginData");

	Params::B_NewMasterServerManager_C_CacheLoginData Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);
	Parms.Locale = std::move(Locale);
	Parms.AccountType = std::move(AccountType);

	UObject::ProcessEvent(Func, &Parms);

	if (CachedUsername != nullptr)
		*CachedUsername = std::move(Parms.CachedUsername);

	if (CachedPassword != nullptr)
		*CachedPassword = std::move(Parms.CachedPassword);

	if (CachedLocale != nullptr)
		*CachedLocale = std::move(Parms.CachedLocale);

	if (CachedAccountType != nullptr)
		*CachedAccountType = std::move(Parms.CachedAccountType);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CheckRefreshAccessToken
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MinDelayInSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::CheckRefreshAccessToken(int32 MinDelayInSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "CheckRefreshAccessToken");

	Params::B_NewMasterServerManager_C_CheckRefreshAccessToken Parms{};

	Parms.MinDelayInSeconds = MinDelayInSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CommonErrorCodeFromString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ERestCommonError                        ErrorCode                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::CommonErrorCodeFromString(const class FString& String, ERestCommonError* ErrorCode, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "CommonErrorCodeFromString");

	Params::B_NewMasterServerManager_C_CommonErrorCodeFromString Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (ErrorCode != nullptr)
		*ErrorCode = Parms.ErrorCode;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ConnectUsingWebSocket
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::ConnectUsingWebSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ConnectUsingWebSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ExecuteUbergraph_B_NewMasterServerManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ExecuteUbergraph_B_NewMasterServerManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ExecuteUbergraph_B_NewMasterServerManager");

	Params::B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetDirectConnectAddress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseProdServers                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           HostName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Port                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::GetDirectConnectAddress(bool UseProdServers, class FString* HostName, int32* Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "GetDirectConnectAddress");

	Params::B_NewMasterServerManager_C_GetDirectConnectAddress Parms{};

	Parms.UseProdServers = UseProdServers;

	UObject::ProcessEvent(Func, &Parms);

	if (HostName != nullptr)
		*HostName = std::move(Parms.HostName);

	if (Port != nullptr)
		*Port = Parms.Port;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Initialize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRunningOnDedicatedServer                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UB_GameInstance_C*                GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::Initialize(bool IsRunningOnDedicatedServer, class UB_GameInstance_C* GameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "Initialize");

	Params::B_NewMasterServerManager_C_Initialize Parms{};

	Parms.IsRunningOnDedicatedServer = IsRunningOnDedicatedServer;
	Parms.GameInstance = GameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.InvalidateRefreshToken
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCallLoginFailedEvent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::InvalidateRefreshToken(bool bCallLoginFailedEvent, int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "InvalidateRefreshToken");

	Params::B_NewMasterServerManager_C_InvalidateRefreshToken Parms{};

	Parms.bCallLoginFailedEvent = bCallLoginFailedEvent;
	Parms.ErrorCode = ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.LogHelper
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::LogHelper(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "LogHelper");

	Params::B_NewMasterServerManager_C_LogHelper Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.MakeActive
// (Public, BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::MakeActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "MakeActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnConnected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ErrorMessage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnConnected(bool Success, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnConnected");

	Params::B_NewMasterServerManager_C_OnConnected Parms{};

	Parms.Success = Success;
	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnDisconnected
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   StatusCode                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasClean                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnDisconnected(int32 StatusCode, const class FString& Reason, bool bWasClean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnDisconnected");

	Params::B_NewMasterServerManager_C_OnDisconnected Parms{};

	Parms.StatusCode = StatusCode;
	Parms.Reason = std::move(Reason);
	Parms.bWasClean = bWasClean;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnLoginCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::OnLoginCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnLoginCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnLoginFailed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnLoginFailed__DelegateSignature(int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnLoginFailed__DelegateSignature");

	Params::B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature Parms{};

	Parms.ErrorCode = ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnLoginResponse
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AccountId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnLoginResponse(bool Success, int32 AccountId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnLoginResponse");

	Params::B_NewMasterServerManager_C_OnLoginResponse Parms{};

	Parms.Success = Success;
	Parms.AccountId = AccountId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnReceiveAccessToken
// (BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::OnReceiveAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnReceiveAccessToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnReceiveAuthToken
// (BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::OnReceiveAuthToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnReceiveAuthToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnRequestComplete(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnRequestComplete");

	Params::B_NewMasterServerManager_C_OnRequestComplete Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestCompleted_Access
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnRequestCompleted_Access(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnRequestCompleted_Access");

	Params::B_NewMasterServerManager_C_OnRequestCompleted_Access Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestFail
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnRequestFail(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnRequestFail");

	Params::B_NewMasterServerManager_C_OnRequestFail Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestFailed_Access
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::OnRequestFailed_Access(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "OnRequestFailed_Access");

	Params::B_NewMasterServerManager_C_OnRequestFailed_Access Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromJsonResponse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ERestCommonError                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResultIsValid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseErrorCodeFromJsonResponse(class UVaRestRequestJSON* Response, ERestCommonError* Result, bool* ResultIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseErrorCodeFromJsonResponse");

	Params::B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ResultIsValid != nullptr)
		*ResultIsValid = Parms.ResultIsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromLEJsonObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULowEntryJsonObject*              JsonObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ERestCommonError                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResultIsValid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseErrorCodeFromLEJsonObject(class ULowEntryJsonObject* JsonObject, ERestCommonError* Result, bool* ResultIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseErrorCodeFromLEJsonObject");

	Params::B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject Parms{};

	Parms.JsonObject = JsonObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ResultIsValid != nullptr)
		*ResultIsValid = Parms.ResultIsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromVaJsonObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestJsonObject*                JsonObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ERestCommonError                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResultIsValid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseErrorCodeFromVaJsonObject(class UVaRestJsonObject* JsonObject, ERestCommonError* Result, bool* ResultIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseErrorCodeFromVaJsonObject");

	Params::B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject Parms{};

	Parms.JsonObject = JsonObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ResultIsValid != nullptr)
		*ResultIsValid = Parms.ResultIsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseIntegerFromJsonResponse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseIntegerFromJsonResponse(class UVaRestRequestJSON* Response, const class FString& Key, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseIntegerFromJsonResponse");

	Params::B_NewMasterServerManager_C_ParseIntegerFromJsonResponse Parms{};

	Parms.Response = Response;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseStringFromJsonResponse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseStringFromJsonResponse(class UVaRestRequestJSON* Response, const class FString& Key, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseStringFromJsonResponse");

	Params::B_NewMasterServerManager_C_ParseStringFromJsonResponse Parms{};

	Parms.Response = Response;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseSuccessFromJsonResponse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseSuccessFromJsonResponse(class UVaRestRequestJSON* Response, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseSuccessFromJsonResponse");

	Params::B_NewMasterServerManager_C_ParseSuccessFromJsonResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseSuccessFromVaJsonObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestJsonObject*                Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseSuccessFromVaJsonObject(class UVaRestJsonObject* Response, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseSuccessFromVaJsonObject");

	Params::B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseVersionNumber
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           VersionJson                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           VersionNumber                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Major                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Revision                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Build                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ParseVersionNumber(const class FString& VersionJson, class FString* VersionNumber, int32* Major, int32* Minor, int32* Revision, int32* Build)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ParseVersionNumber");

	Params::B_NewMasterServerManager_C_ParseVersionNumber Parms{};

	Parms.VersionJson = std::move(VersionJson);

	UObject::ProcessEvent(Func, &Parms);

	if (VersionNumber != nullptr)
		*VersionNumber = std::move(Parms.VersionNumber);

	if (Major != nullptr)
		*Major = Parms.Major;

	if (Minor != nullptr)
		*Minor = Parms.Minor;

	if (Revision != nullptr)
		*Revision = Parms.Revision;

	if (Build != nullptr)
		*Build = Parms.Build;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.PerformLogin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AuthInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::PerformLogin(const class FString& UserName, const class FString& Password, const class FString& Locale, const class FString& AccountType, const class FString& AuthInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "PerformLogin");

	Params::B_NewMasterServerManager_C_PerformLogin Parms{};

	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);
	Parms.Locale = std::move(Locale);
	Parms.AccountType = std::move(AccountType);
	Parms.AuthInfo = std::move(AuthInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.PerformLoginUsingRefreshToken
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_RefreshToken                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::PerformLoginUsingRefreshToken(const class FString& Param_RefreshToken, const class FString& Locale, const class FString& AccountType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "PerformLoginUsingRefreshToken");

	Params::B_NewMasterServerManager_C_PerformLoginUsingRefreshToken Parms{};

	Parms.Param_RefreshToken = std::move(Param_RefreshToken);
	Parms.Locale = std::move(Locale);
	Parms.AccountType = std::move(AccountType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.PerformTcpConnect
// (BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::PerformTcpConnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "PerformTcpConnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ProcessLoginResponse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULowEntryJsonObject*              JsonObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Code                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::ProcessLoginResponse(class ULowEntryJsonObject* JsonObject, bool* Success, int32* Code, class FString* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ProcessLoginResponse");

	Params::B_NewMasterServerManager_C_ProcessLoginResponse Parms{};

	Parms.JsonObject = JsonObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Code != nullptr)
		*Code = Parms.Code;

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ReloginUsingCachedData
// (BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::ReloginUsingCachedData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "ReloginUsingCachedData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.RetrieveAccessToken
// (BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::RetrieveAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "RetrieveAccessToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.RevokeAccessToken
// (Public, BlueprintCallable, BlueprintEvent)

void UB_NewMasterServerManager_C::RevokeAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "RevokeAccessToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetAccessTokenExpiryDateTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDateTime                        DateTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int64                                   LifetimeSeconds                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::SetAccessTokenExpiryDateTime(const struct FDateTime& DateTime, int64 LifetimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "SetAccessTokenExpiryDateTime");

	Params::B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime Parms{};

	Parms.DateTime = std::move(DateTime);
	Parms.LifetimeSeconds = LifetimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetRefreshTokenExpiryDateTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDateTime                        DateTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int64                                   LifetimeSeconds                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::SetRefreshTokenExpiryDateTime(const struct FDateTime& DateTime, int64 LifetimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "SetRefreshTokenExpiryDateTime");

	Params::B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime Parms{};

	Parms.DateTime = std::move(DateTime);
	Parms.LifetimeSeconds = LifetimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetRestApiConnectivityState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsConnected                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::SetRestApiConnectivityState(bool Param_IsConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "SetRestApiConnectivityState");

	Params::B_NewMasterServerManager_C_SetRestApiConnectivityState Parms{};

	Parms.Param_IsConnected = Param_IsConnected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Can Make Requests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::Can_Make_Requests(bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "Can Make Requests");

	Params::B_NewMasterServerManager_C_Can_Make_Requests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallHostname
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bUseProdServers                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UB_NewMasterServerManager_C::GetRestCallHostname(bool bUseProdServers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "GetRestCallHostname");

	Params::B_NewMasterServerManager_C_GetRestCallHostname Parms{};

	Parms.bUseProdServers = bUseProdServers;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallPort
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UB_NewMasterServerManager_C::GetRestCallPort() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "GetRestCallPort");

	Params::B_NewMasterServerManager_C_GetRestCallPort Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallProtocol
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UB_NewMasterServerManager_C::GetRestCallProtocol() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "GetRestCallProtocol");

	Params::B_NewMasterServerManager_C_GetRestCallProtocol Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasValidAccessToken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::HasValidAccessToken(bool* IsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "HasValidAccessToken");

	Params::B_NewMasterServerManager_C_HasValidAccessToken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasValidRefreshToken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::HasValidRefreshToken(bool* IsValid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "HasValidRefreshToken");

	Params::B_NewMasterServerManager_C_HasValidRefreshToken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasWitchItAccountId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::HasWitchItAccountId(bool* Out) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "HasWitchItAccountId");

	Params::B_NewMasterServerManager_C_HasWitchItAccountId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function B_NewMasterServerManager.B_NewMasterServerManager_C.IsLoggedIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bIsLoggedIn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewMasterServerManager_C::IsLoggedIn(bool* bIsLoggedIn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewMasterServerManager_C", "IsLoggedIn");

	Params::B_NewMasterServerManager_C_IsLoggedIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsLoggedIn != nullptr)
		*bIsLoggedIn = Parms.bIsLoggedIn;
}

}

