#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BuffWitchInvisible

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_BuffWitchInvisible.B_BuffWitchInvisible_C.BuffEnd
// 0x0010 (0x0010 - 0x0000)
struct B_BuffWitchInvisible_C_BuffEnd final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffWitchInvisible_C_BuffEnd) == 0x000008, "Wrong alignment on B_BuffWitchInvisible_C_BuffEnd");
static_assert(sizeof(B_BuffWitchInvisible_C_BuffEnd) == 0x000010, "Wrong size on B_BuffWitchInvisible_C_BuffEnd");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffEnd, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_BuffWitchInvisible_C_BuffEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffEnd, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'B_BuffWitchInvisible_C_BuffEnd::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");

// Function B_BuffWitchInvisible.B_BuffWitchInvisible_C.BuffStart
// 0x0020 (0x0020 - 0x0000)
struct B_BuffWitchInvisible_C_BuffStart final
{
public:
	class AB_PlayerState_C*                       Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffWitchInvisible_C_BuffStart) == 0x000008, "Wrong alignment on B_BuffWitchInvisible_C_BuffStart");
static_assert(sizeof(B_BuffWitchInvisible_C_BuffStart) == 0x000020, "Wrong size on B_BuffWitchInvisible_C_BuffStart");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffStart, Param_PlayerState) == 0x000000, "Member 'B_BuffWitchInvisible_C_BuffStart::Param_PlayerState' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffStart, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_BuffWitchInvisible_C_BuffStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffStart, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'B_BuffWitchInvisible_C_BuffStart::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_BuffStart, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'B_BuffWitchInvisible_C_BuffStart::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function B_BuffWitchInvisible.B_BuffWitchInvisible_C.ExecuteUbergraph_B_BuffWitchInvisible
// 0x0058 (0x0058 - 0x0000)
struct B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch_1;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B30[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible) == 0x000008, "Wrong alignment on B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible");
static_assert(sizeof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible) == 0x000058, "Wrong size on B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, EntryPoint) == 0x000000, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_CustomEvent_Actor) == 0x000008, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000010, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_AsB_Witch) == 0x000020, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_CustomEvent_Actor_1) == 0x000030, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_AsB_Witch_1) == 0x000038, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_AsB_Witch_1' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1) == 0x000048, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1' has a wrong offset!");
static_assert(offsetof(B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'B_BuffWitchInvisible_C_ExecuteUbergraph_B_BuffWitchInvisible::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function B_BuffWitchInvisible.B_BuffWitchInvisible_C.HideMulti
// 0x0008 (0x0008 - 0x0000)
struct B_BuffWitchInvisible_C_HideMulti final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffWitchInvisible_C_HideMulti) == 0x000008, "Wrong alignment on B_BuffWitchInvisible_C_HideMulti");
static_assert(sizeof(B_BuffWitchInvisible_C_HideMulti) == 0x000008, "Wrong size on B_BuffWitchInvisible_C_HideMulti");
static_assert(offsetof(B_BuffWitchInvisible_C_HideMulti, Actor) == 0x000000, "Member 'B_BuffWitchInvisible_C_HideMulti::Actor' has a wrong offset!");

// Function B_BuffWitchInvisible.B_BuffWitchInvisible_C.UnhideMulti
// 0x0008 (0x0008 - 0x0000)
struct B_BuffWitchInvisible_C_UnhideMulti final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffWitchInvisible_C_UnhideMulti) == 0x000008, "Wrong alignment on B_BuffWitchInvisible_C_UnhideMulti");
static_assert(sizeof(B_BuffWitchInvisible_C_UnhideMulti) == 0x000008, "Wrong size on B_BuffWitchInvisible_C_UnhideMulti");
static_assert(offsetof(B_BuffWitchInvisible_C_UnhideMulti, Actor) == 0x000000, "Member 'B_BuffWitchInvisible_C_UnhideMulti::Actor' has a wrong offset!");

}

