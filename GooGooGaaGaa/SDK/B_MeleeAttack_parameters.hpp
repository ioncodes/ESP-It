#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MeleeAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_MeleeAttack.B_MeleeAttack_C.AddHitActor
// 0x0010 (0x0010 - 0x0000)
struct B_MeleeAttack_C_AddHitActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3605[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MeleeAttack_C_AddHitActor) == 0x000008, "Wrong alignment on B_MeleeAttack_C_AddHitActor");
static_assert(sizeof(B_MeleeAttack_C_AddHitActor) == 0x000010, "Wrong size on B_MeleeAttack_C_AddHitActor");
static_assert(offsetof(B_MeleeAttack_C_AddHitActor, Actor) == 0x000000, "Member 'B_MeleeAttack_C_AddHitActor::Actor' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_AddHitActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_MeleeAttack_C_AddHitActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_AddHitActor, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'B_MeleeAttack_C_AddHitActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function B_MeleeAttack.B_MeleeAttack_C.AddHitComponent
// 0x0010 (0x0010 - 0x0000)
struct B_MeleeAttack_C_AddHitComponent final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3606[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MeleeAttack_C_AddHitComponent) == 0x000008, "Wrong alignment on B_MeleeAttack_C_AddHitComponent");
static_assert(sizeof(B_MeleeAttack_C_AddHitComponent) == 0x000010, "Wrong size on B_MeleeAttack_C_AddHitComponent");
static_assert(offsetof(B_MeleeAttack_C_AddHitComponent, Component) == 0x000000, "Member 'B_MeleeAttack_C_AddHitComponent::Component' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_AddHitComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_MeleeAttack_C_AddHitComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_AddHitComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'B_MeleeAttack_C_AddHitComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function B_MeleeAttack.B_MeleeAttack_C.BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_OtherActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_OtherComp;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3607[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, Param_OtherActor) == 0x000008, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::Param_OtherActor' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, Param_OtherComp) == 0x000010, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::Param_OtherComp' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_MeleeAttack_C_BndEvt__Cone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_MeleeAttack.B_MeleeAttack_C.ExecuteUbergraph_B_MeleeAttack
// 0x0130 (0x0130 - 0x0000)
struct B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3608[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3609[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack) == 0x000008, "Wrong alignment on B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack");
static_assert(sizeof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack) == 0x000130, "Wrong size on B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, EntryPoint) == 0x000000, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000028, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_OtherActor) == 0x000030, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_OtherComp) == 0x000038, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000040, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'B_MeleeAttack_C_ExecuteUbergraph_B_MeleeAttack::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

// Function B_MeleeAttack.B_MeleeAttack_C.HandleHit
// 0x01D8 (0x01D8 - 0x0000)
struct B_MeleeAttack_C_HandleHit final
{
public:
	class AActor*                                 Param_OtherActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_OtherComp;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360B[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360D[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetWitchPlayerController_PlayerController; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360F[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3610[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PhysicalSound_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3611[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3612[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3613[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3614[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3615[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_2;    // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3616[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3617[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MeleeAttack_C_HandleHit) == 0x000008, "Wrong alignment on B_MeleeAttack_C_HandleHit");
static_assert(sizeof(B_MeleeAttack_C_HandleHit) == 0x0001D8, "Wrong size on B_MeleeAttack_C_HandleHit");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, Param_OtherActor) == 0x000000, "Member 'B_MeleeAttack_C_HandleHit::Param_OtherActor' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, Param_OtherComp) == 0x000008, "Member 'B_MeleeAttack_C_HandleHit::Param_OtherComp' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000011, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_ClassIsChildOf_ReturnValue) == 0x000020, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetObjectClass_ReturnValue_1) == 0x000030, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetObjectClass_ReturnValue_2) == 0x000038, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000040, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000041, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetWitchPlayerController_PlayerController) == 0x000048, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetWitchPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BooleanOR_ReturnValue_1) == 0x000050, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_HasAuthority_ReturnValue_1) == 0x000060, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_AsB_Hunter) == 0x000068, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_HasAuthority_ReturnValue_2) == 0x000071, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x000072, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Array_Contains_ReturnValue) == 0x0000A8, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A9, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetInstigatorController_ReturnValue) == 0x0000B0, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BooleanOR_ReturnValue_2) == 0x0000B8, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_AsB_Player_State) == 0x0000C0, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetInstigatorController_ReturnValue_1) == 0x0000D0, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetInstigatorController_ReturnValue_2) == 0x0000E0, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetInstigatorController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_AsB_Player_State_1) == 0x0000E8, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'B_MeleeAttack_C_HandleHit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000F8, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetForwardVector_ReturnValue) == 0x000110, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_GetOwner_ReturnValue_1) == 0x000128, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BreakVector_X) == 0x000130, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BreakVector_Y) == 0x000138, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_BreakVector_Z) == 0x000140, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_ApplyDamage_ReturnValue) == 0x000148, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_MakeVector_ReturnValue) == 0x000170, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000188, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Normal_ReturnValue) == 0x0001A0, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B8, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x0001D0, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_PlaySoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_MeleeAttack_C_HandleHit, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x0001D4, "Member 'B_MeleeAttack_C_HandleHit::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function B_MeleeAttack.B_MeleeAttack_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_MeleeAttack_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MeleeAttack_C_ReceiveTick) == 0x000004, "Wrong alignment on B_MeleeAttack_C_ReceiveTick");
static_assert(sizeof(B_MeleeAttack_C_ReceiveTick) == 0x000004, "Wrong size on B_MeleeAttack_C_ReceiveTick");
static_assert(offsetof(B_MeleeAttack_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_MeleeAttack_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

